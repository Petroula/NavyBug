/**
 * @author Dennis
 *
 */

public class Decrypt {
	String [] alphabet= new String [] {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", " "};
	private String encryptedString="";
	 
	private int key= 0;
	private int amount=1200;
	
	
	  void decrypt (String word) {
		  String lastString="";
		  if(amount!=0){
		  for(int i = 0; i < word.length(); i++){
			    char c = word.charAt(i);        
			    String check=Character.toString(c);
			    
			    
			    
			    lastString+=findLetter(check);
		  }
		  amount--;
		  encryptedString=lastString;
		  decrypt(encryptedString);
		  
		  }
		  
		  else{
			  returnDecryption();
		  }
	   }
	  
	  String returnDecryption(){
		  return encryptedString;
	  }
	  
	  
	  
	  public void setKey(int key){
			this.key=key;
			
		}
	
	
	private int hash (int position, int key) {
	
	int newPosition=(position-key)%27;
	if (newPosition < 0)
	{
	    newPosition += 27;
	}
	
	return newPosition;
	}
	
	private String findLetter (String character) {
		
		String letter="";
		
		int offset; 
		
		for(int i=0; i < alphabet.length; i++){
			
			if(alphabet[i].equals(character)){
				offset=hash(i, key);
				letter=decryptLetter(offset);
				return letter;
			}
		}
	
		return letter;
	}
	
	private String decryptLetter (int offset){
		
		String letter="";
		
		for(int i=0; i<alphabet.length; i++){
			if(i==offset){
				letter=alphabet[i];
				return letter;
				
			}
		}
		return letter;
	}
	
}

